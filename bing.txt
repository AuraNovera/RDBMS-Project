#customers table

create table customers(
id varchar(20),
name varchar(30),
email varchar(30),
phone varchar(15),
password varchar(15),
dob date,
address varchar(50),
username varchar(20)
);


#values in customers table

INSERT INTO customers VALUES(NULL,'abcdefgh','bla@gmail.com','01796581246','blablabla',TO_DATE('09-01-2016','DD-MM-YYYY'),'IUT');
INSERT INTO customers VALUES(NULL,'Novera','bla@gmail.com','01796581246','blablabla',TO_DATE('09-01-2019','DD-MM-YYYY'),'IUT',NULL);
INSERT INTO customers VALUES(NULL,'Novera','bla@gmail.com','01796581246','blablabla',TO_DATE('08-05-2019','DD-MM-YYYY'),'IUT',NULL);
INSERT INTO customers VALUES(NULL,'Na','bla@gmail.com','01796581246','blablabla',TO_DATE('08-05-2019','DD-MM-YYYY'),'IUT',NULL);
INSERT INTO customers VALUES(NULL,'Ebtesam','bla@gmail.com','01796581246','blablabla',TO_DATE('08-05-2019','DD-MM-YYYY'),'IUT',NULL);
INSERT INTO customers VALUES(NULL,'fabihaiffat','bla@gmail.com','01796581246','blablabla',TO_DATE('08-05-2019','DD-MM-YYYY'),'IUT',NULL);

CREATE SEQUENCE S_ID START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 1000;


CREATE SEQUENCE username START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 1000;

#function that gives a promocode

CREATE OR REPLACE FUNCTION GEN_promocode(dob DATE,name VARCHAR2,phone VARCHAR2)
RETURN VARCHAR2
IS
DATE1 VARCHAR2(20);
DATE2 VARCHAR2(20);
DATE3 VARCHAR2(20);
FINAL VARCHAR2(20);
name1 VARCHAR2(30);
name2 VARCHAR2(30);
BEGIN 
SELECT EXTRACT(YEAR FROM dob) INTO DATE1 FROM DUAL;
DATE2:= TO_CHAR(DATE1);
DATE3:=SUBSTR(DATE2,3,2);
SELECT name into name1 from dual;
name1:=SUBSTR(name,0,3);
name2:=SUBSTR(name,3,3);
SELECT (name1||DATE3||name2) INTO FINAL FROM DUAL;
RETURN FINAL;
END;
/

#trigger for the promocode generation

CREATE OR REPLACE TRIGGER TRIGGER_bing
BEFORE INSERT 
ON customers
FOR EACH ROW
DECLARE
BEGIN
:NEW.id := GEN_promocode(:NEW.dob,:NEW.name,:NEW.phone);
END;
/

#FUNCTION TO LIST NO OF BIRTHDAYS TODAY


DECLARE
users number;
names varchar(20);
BEGIN 
select count(name) into users from customers where to_char(dob,'MM-DD')=to_char(sysdate,'MM-DD');
dbms_output.put_line( ’Birthdays of ’|| users ||' customers');
END; 
/

#FUNCTION TO WISH ON BIRTHDAYS

DECLARE
names customers.name%type;
dob customers.dob%type;
cursor birthday is
select name from customers where to_char(dob,'MM-DD')=to_char(sysdate,'MM-DD');
begin
open birthday;
loop
fetch birthday
into names;
exit
when birthday%notfound;
if(to_char(dob,'MM-DD')=to_char(sysdate,'MM-DD')) then
dbms_output.put_line( ’Birthdays of ’|| names ||' customers');
else
dbms_output.put_line( ’Happy Birthday ’|| names);
end if;
end loop;
close birthday;
END; 
/


#function to create USERNAME 

CREATE OR REPLACE FUNCTION GEN_username(dob DATE,name VARCHAR2)
RETURN VARCHAR2
IS
DATE1 VARCHAR2(20);
DATE2 VARCHAR2(20);
username varchar2(20);
FINAL VARCHAR2(20);
BEGIN 
SELECT EXTRACT(YEAR FROM dob) INTO DATE1 FROM DUAL;
DATE2:= TO_CHAR(DATE1);
SELECT (name||DATE2) INTO FINAL FROM DUAL;
RETURN FINAL;
END;
/

#trigger to generate USERNAME

CREATE OR REPLACE TRIGGER TRIGGER_bing2
BEFORE INSERT 
ON customers
FOR EACH ROW
DECLARE
BEGIN
:NEW.username := GEN_username(:NEW.dob,:NEW.name);
END;
/


#table Cart

CREATE TABLE CART(
ID INT,
NAME VARCHAR2(255),
PRICE FLOAT,
DISCOUNT FLOAT,
QUANTITY INT,
CATEGORY VARCHAR2(255),
FRANCHISE VARCHAR2(255),
CONSTRAINT FPK PRIMARY KEY(ID)
);
INSERT INTO CART VALUES(1,'FRIENDS',260,0.10,10,'SITCOM','FRIENDS');
INSERT INTO CART VALUES(2,'ARNOB',350,30,0.10,'MUSIC','ARNOB');
INSERT INTO CART VALUES(3,'DEADPOOL',1000,0.20,30,'MOVIE','DEADPOOL');
INSERT INTO CART VALUES(4,'BLOOD_DIAMOND',100,0.30,10,'MOVIE','BLOOD DIAMOND');

#COUNTING DISCOUNTED PRODUCTS

DECLARE 
total_rows number; 
BEGIN 
UPDATE CART 
SET PRICE = PRICE-PRICE*DISCOUNT
WHERE PRICE>250 and CATEGORY in ('MOVIE', 'SITCOM');
IF sql%notfound THEN 
dbms_output.put_line(’NO DISCOUNT FOR YOU! SORRY :(’); 
ELSIF sql%found THEN 
total_rows := sql%rowcount; 
dbms_output.put_line( total_rows || ’ PRODUCTS WILL BE ON DISCOUNT! ’);
END IF; 
END; 
/


DECLARE
names cart.name%type;
price cart.price%type;
category cart.category%type;
cursor discount is
select name from cart WHERE PRICE>250 and CATEGORY in ('MOVIE', 'SITCOM');
begin
open discount;
loop
fetch discount
into names;
exit
when discount%notfound;
if(PRICE>250 and CATEGORY in ('MOVIE', 'SITCOM')) then
dbms_output.put_line( ’Discounted products are not there’);
else
dbms_output.put_line( ’Discounted product is ’|| names);
end if;
end loop;
close discount;
END; 
/








create or replace function log_in(name in varchar2, password in varchar2)   
return varchar2  
as  
  z number;  
begin  
  select count(*)  
    into z   
    from customers   
    where name=name   
    and password=password; 
  return 'Login successful!';  
if z=0 then 
return 'Wrong name or password!';
end if;
end; 
/


select log_in('anika','anika') from dual;

